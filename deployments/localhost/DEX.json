{
  "address": "0x663F3ad617193148711d28f5334eE4Ed07016602",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Insuficient_Balance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "Same_Token",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenB",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xab895cb5846680038eef58f289f035887119d3d096536700efdb49c7d2eb2cae",
  "receipt": {
    "to": null,
    "from": "0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC",
    "contractAddress": "0x663F3ad617193148711d28f5334eE4Ed07016602",
    "transactionIndex": 0,
    "gasUsed": "545931",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xb9e4b42dff454b877b269735d1485d36442b354679493bec2c4bf794ce8975e6",
    "transactionHash": "0xab895cb5846680038eef58f289f035887119d3d096536700efdb49c7d2eb2cae",
    "logs": [],
    "blockNumber": 3,
    "cumulativeGasUsed": "545931",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a88eb1d4d74a6df9a81e898680d4921c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Insuficient_Balance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"Same_Token\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DEX.sol\":\"DEX\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/DEX.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity >=0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nerror Insuficient_Balance(address sender, uint256 amount);\\nerror Unsoported_Token(address token, address sender);\\nerror Same_Token(address tokenA, address tokenB);\\n\\ncontract DEX {\\n\\n    function swap(address _tokenA, address _tokenB, address _to, uint256 _amount) public {\\n        \\n        // If tokenA and tokenB are same revert..\\n        if(_tokenA == _tokenB) revert Same_Token(_tokenA, _tokenB);\\n\\n        // Declaring tokens..\\n        IERC20 tokenA = IERC20(_tokenA);\\n        IERC20 tokenB = IERC20(_tokenB);\\n\\n        // Assuming totalSupply is the liquidity of each token..\\n        uint256 rate = (tokenA.totalSupply() / tokenB.totalSupply()) * 1e18;\\n\\n        uint256 amountToReceive;\\n        \\n        // Calculating amount to receive..\\n        if(tokenA.totalSupply() < tokenB.totalSupply()) {\\n            amountToReceive = (rate * _amount) / 1e18;\\n        } else {\\n            amountToReceive = (rate / _amount) / 1e18;\\n        }\\n\\n        // Checking balance of sender..\\n        if(tokenA.balanceOf(msg.sender) < _amount) revert Insuficient_Balance(msg.sender, _amount);\\n\\n        // Checking balance receiver..\\n        if(tokenB.balanceOf(_to) < amountToReceive) revert Insuficient_Balance(msg.sender, amountToReceive);\\n\\n        // Transfering tokens..\\n        tokenA.transferFrom(msg.sender, _to, _amount);\\n        tokenB.transferFrom(_to, msg.sender, amountToReceive);\\n\\n    }\\n\\n}\",\"keccak256\":\"0xcce45bfbe4028a28ec7c30f60e0ff4ca700e5cc0ced5e1fa25b08ee0acd46b4d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b506108f18061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063a9678a1814610030575b600080fd5b61004a6004803603810190610045919061061a565b61004c565b005b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036100be5783836040517f3e74c15e0000000000000000000000000000000000000000000000000000000081526004016100b5929190610690565b60405180910390fd5b600084905060008490506000670de0b6b3a76400008273ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561011e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014291906106ce565b8473ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561018d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b191906106ce565b6101bb9190610759565b6101c5919061078a565b905060008273ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610214573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023891906106ce565b8473ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610283573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a791906106ce565b10156102d357670de0b6b3a764000085836102c2919061078a565b6102cc9190610759565b90506102f5565b670de0b6b3a764000085836102e89190610759565b6102f29190610759565b90505b848473ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161032f91906107cc565b602060405180830381865afa15801561034c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037091906106ce565b10156103b55733856040517f871d6f350000000000000000000000000000000000000000000000000000000081526004016103ac9291906107f6565b60405180910390fd5b808373ffffffffffffffffffffffffffffffffffffffff166370a08231886040518263ffffffff1660e01b81526004016103ef91906107cc565b602060405180830381865afa15801561040c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043091906106ce565b10156104755733816040517f871d6f3500000000000000000000000000000000000000000000000000000000815260040161046c9291906107f6565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd3388886040518463ffffffff1660e01b81526004016104b29392919061081f565b6020604051808303816000875af11580156104d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f5919061088e565b508273ffffffffffffffffffffffffffffffffffffffff166323b872dd8733846040518463ffffffff1660e01b81526004016105339392919061081f565b6020604051808303816000875af1158015610552573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610576919061088e565b505050505050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105b182610586565b9050919050565b6105c1816105a6565b81146105cc57600080fd5b50565b6000813590506105de816105b8565b92915050565b6000819050919050565b6105f7816105e4565b811461060257600080fd5b50565b600081359050610614816105ee565b92915050565b6000806000806080858703121561063457610633610581565b5b6000610642878288016105cf565b9450506020610653878288016105cf565b9350506040610664878288016105cf565b925050606061067587828801610605565b91505092959194509250565b61068a816105a6565b82525050565b60006040820190506106a56000830185610681565b6106b26020830184610681565b9392505050565b6000815190506106c8816105ee565b92915050565b6000602082840312156106e4576106e3610581565b5b60006106f2848285016106b9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610764826105e4565b915061076f836105e4565b92508261077f5761077e6106fb565b5b828204905092915050565b6000610795826105e4565b91506107a0836105e4565b92508282026107ae816105e4565b915082820484148315176107c5576107c461072a565b5b5092915050565b60006020820190506107e16000830184610681565b92915050565b6107f0816105e4565b82525050565b600060408201905061080b6000830185610681565b61081860208301846107e7565b9392505050565b60006060820190506108346000830186610681565b6108416020830185610681565b61084e60408301846107e7565b949350505050565b60008115159050919050565b61086b81610856565b811461087657600080fd5b50565b60008151905061088881610862565b92915050565b6000602082840312156108a4576108a3610581565b5b60006108b284828501610879565b9150509291505056fea2646970667358221220163c33551ab82c7d2002fa3e2696b6ab623718a2d718716709b92e9d5699961564736f6c634300081b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063a9678a1814610030575b600080fd5b61004a6004803603810190610045919061061a565b61004c565b005b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036100be5783836040517f3e74c15e0000000000000000000000000000000000000000000000000000000081526004016100b5929190610690565b60405180910390fd5b600084905060008490506000670de0b6b3a76400008273ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561011e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014291906106ce565b8473ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561018d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b191906106ce565b6101bb9190610759565b6101c5919061078a565b905060008273ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610214573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023891906106ce565b8473ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610283573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a791906106ce565b10156102d357670de0b6b3a764000085836102c2919061078a565b6102cc9190610759565b90506102f5565b670de0b6b3a764000085836102e89190610759565b6102f29190610759565b90505b848473ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161032f91906107cc565b602060405180830381865afa15801561034c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037091906106ce565b10156103b55733856040517f871d6f350000000000000000000000000000000000000000000000000000000081526004016103ac9291906107f6565b60405180910390fd5b808373ffffffffffffffffffffffffffffffffffffffff166370a08231886040518263ffffffff1660e01b81526004016103ef91906107cc565b602060405180830381865afa15801561040c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043091906106ce565b10156104755733816040517f871d6f3500000000000000000000000000000000000000000000000000000000815260040161046c9291906107f6565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd3388886040518463ffffffff1660e01b81526004016104b29392919061081f565b6020604051808303816000875af11580156104d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f5919061088e565b508273ffffffffffffffffffffffffffffffffffffffff166323b872dd8733846040518463ffffffff1660e01b81526004016105339392919061081f565b6020604051808303816000875af1158015610552573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610576919061088e565b505050505050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105b182610586565b9050919050565b6105c1816105a6565b81146105cc57600080fd5b50565b6000813590506105de816105b8565b92915050565b6000819050919050565b6105f7816105e4565b811461060257600080fd5b50565b600081359050610614816105ee565b92915050565b6000806000806080858703121561063457610633610581565b5b6000610642878288016105cf565b9450506020610653878288016105cf565b9350506040610664878288016105cf565b925050606061067587828801610605565b91505092959194509250565b61068a816105a6565b82525050565b60006040820190506106a56000830185610681565b6106b26020830184610681565b9392505050565b6000815190506106c8816105ee565b92915050565b6000602082840312156106e4576106e3610581565b5b60006106f2848285016106b9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610764826105e4565b915061076f836105e4565b92508261077f5761077e6106fb565b5b828204905092915050565b6000610795826105e4565b91506107a0836105e4565b92508282026107ae816105e4565b915082820484148315176107c5576107c461072a565b5b5092915050565b60006020820190506107e16000830184610681565b92915050565b6107f0816105e4565b82525050565b600060408201905061080b6000830185610681565b61081860208301846107e7565b9392505050565b60006060820190506108346000830186610681565b6108416020830185610681565b61084e60408301846107e7565b949350505050565b60008115159050919050565b61086b81610856565b811461087657600080fd5b50565b60008151905061088881610862565b92915050565b6000602082840312156108a4576108a3610581565b5b60006108b284828501610879565b9150509291505056fea2646970667358221220163c33551ab82c7d2002fa3e2696b6ab623718a2d718716709b92e9d5699961564736f6c634300081b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}